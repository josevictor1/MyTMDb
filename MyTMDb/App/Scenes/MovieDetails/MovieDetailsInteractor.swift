//
//  MovieDetailsInteractor.swift
//  MyTMDb
//
//  Created by José Victor Pereira Costa on 12/01/19.
//  Copyright (c) 2019 José Victor Pereira Costa. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//  https://github.com/HelmMobile/clean-swift-templates

import  RxSwift

protocol MovieDetailsInteractorInput {
    func getMovie(with request: MovieDetailsScene.MovieDetail.Request)
}

protocol MovieDetailsInteractorOutput {
    func presentMovie(with response: MovieDetailsScene.MovieDetail.Response)
    func presentGenres(with response: MovieDetailsScene.Genres.Response)
}

protocol MovieDetailsDataSource {
    
}

protocol MovieDetailsDataDestination {
    var movieDetails: Result? { get set }
}

class MovieDetailsInteractor: MovieDetailsInteractorInput, MovieDetailsDataSource, MovieDetailsDataDestination {
    
    var output: MovieDetailsInteractorOutput?
    var movieDetails: Result?
    var moviesWorker: MoviesWorker!
    let disposeBag = DisposeBag()
    
    init(moviesWorker: MoviesWorker = MoviesWorker()) {
        self.moviesWorker = moviesWorker
    }
    
    // MARK: Business logic
    
    func getMovie(with request: MovieDetailsScene.MovieDetail.Request) {
        
        moviesWorker.getGenres().subscribe { event in
            switch event {
            case .success(let genres):
                let response = MovieDetailsScene.Genres.Response(genresList: genres)
                self.output?.presentGenres(with: response)
            case .error(_):
                break
            }
            if let details = self.movieDetails {
                self.output?.presentMovie(with: MovieDetailsScene.MovieDetail.Response(result: details))
            }
        }
        .disposed(by: disposeBag)
    }
}
